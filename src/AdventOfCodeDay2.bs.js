// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

var input = /* array */[
  1,
  0,
  0,
  3,
  1,
  1,
  2,
  3,
  1,
  3,
  4,
  3,
  1,
  5,
  0,
  3,
  2,
  10,
  1,
  19,
  1,
  6,
  19,
  23,
  2,
  23,
  6,
  27,
  1,
  5,
  27,
  31,
  1,
  31,
  9,
  35,
  2,
  10,
  35,
  39,
  1,
  5,
  39,
  43,
  2,
  43,
  10,
  47,
  1,
  47,
  6,
  51,
  2,
  51,
  6,
  55,
  2,
  55,
  13,
  59,
  2,
  6,
  59,
  63,
  1,
  63,
  5,
  67,
  1,
  6,
  67,
  71,
  2,
  71,
  9,
  75,
  1,
  6,
  75,
  79,
  2,
  13,
  79,
  83,
  1,
  9,
  83,
  87,
  1,
  87,
  13,
  91,
  2,
  91,
  10,
  95,
  1,
  6,
  95,
  99,
  1,
  99,
  13,
  103,
  1,
  13,
  103,
  107,
  2,
  107,
  10,
  111,
  1,
  9,
  111,
  115,
  1,
  115,
  10,
  119,
  1,
  5,
  119,
  123,
  1,
  6,
  123,
  127,
  1,
  10,
  127,
  131,
  1,
  2,
  131,
  135,
  1,
  135,
  10,
  0,
  99,
  2,
  14,
  0,
  0
];

function intCode(array) {
  var length = input.length;
  var index = 0;
  while(index <= (length - 4 | 0)) {
    var currentItem = Caml_array.caml_array_get(array, index);
    var element1Index = Caml_array.caml_array_get(array, index + 1 | 0);
    var element2Index = Caml_array.caml_array_get(array, index + 2 | 0);
    var targetIndex = Caml_array.caml_array_get(array, index + 3 | 0);
    var element1 = Caml_array.caml_array_get(array, element1Index);
    var element2 = Caml_array.caml_array_get(array, element2Index);
    var switcher = currentItem - 1 | 0;
    if (switcher === 0 || switcher === 1) {
      if (switcher !== 0) {
        Caml_array.caml_array_set(array, targetIndex, Caml_int32.imul(element1, element2));
        index = index + 4 | 0;
      } else {
        Caml_array.caml_array_set(array, targetIndex, element1 + element2 | 0);
        index = index + 4 | 0;
      }
    } else if (switcher === 98) {
      index = length;
    }
    
  };
  return Caml_array.caml_array_get(array, 0);
}

function generateInputArray(inputArray, noun, verb) {
  var resultArray = $$Array.copy(inputArray);
  Caml_array.caml_array_set(resultArray, 1, noun);
  Caml_array.caml_array_set(resultArray, 2, verb);
  return resultArray;
}

function findPartTwoAnswer(inputArray) {
  var indexA = 0;
  var indexB = 0;
  var result = /* tuple */[
    0,
    0
  ];
  while(indexA <= 99) {
    indexB = 0;
    while(indexB <= 99) {
      var value = intCode(generateInputArray(inputArray, indexA, indexB));
      if (value === 19690720) {
        result = /* tuple */[
          indexA,
          indexB
        ];
        indexA = 99;
        indexB = 99;
      }
      indexB = indexB + 1 | 0;
    };
    indexA = indexA + 1 | 0;
  };
  return result;
}

console.log(findPartTwoAnswer(input));

var target = 19690720;

exports.input = input;
exports.intCode = intCode;
exports.generateInputArray = generateInputArray;
exports.target = target;
exports.findPartTwoAnswer = findPartTwoAnswer;
/*  Not a pure module */
